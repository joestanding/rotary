# --------------------------------------------------------------------------- #
# Configuration																  #
# --------------------------------------------------------------------------- #

# Specify processor architecture (x86, ARM, etc.)
ARCH ?= x86

# Specify target platform (IBM PC, Raspberry Pi 3 Model B+, etc.)
PLATFORM ?= default

# --------------------------------------------------------------------------- #
# Directories																  #
# --------------------------------------------------------------------------- #

# Contains anything generated by the build process
BUILD_DIR			:= build
# Contains compiled binary output
OUTPUT_DIR			:= $(BUILD_DIR)/output
# Architecture-agnostic kernel source code
KERNEL_DIR			:= kernel
# Architecture-specific code
ARCH_DIR			:= arch/$(ARCH)
# Platform-specific code
PLATFORM_DIR		:= $(ARCH_DIR)/platforms/$(PLATFORM)
# Kernel test unit directory
TEST_DIR			:= tests

# List of C and object files
KERNEL_C_SRC	= $(shell find $(KERNEL_DIR) -type f -name "*.c")
KERNEL_C_OBJ	= $(patsubst $(KERNEL_DIR)/%.c,$(OUTPUT_DIR)/kernel/%.o,$(KERNEL_C_SRC))
KERNEL_ASM_SRC	= $(shell find $(KERNEL_DIR) -type f -name "*.asm")
KERNEL_ASM_OBJ	= $(patsubst $(KERNEL_DIR)/%.asm,$(OUTPUT_DIR)/kernel/%.o,$(KERNEL_ASM_SRC))
KERNEL_OBJ      = $(KERNEL_C_OBJ) $(KERNEL_ASM_OBJ)

ARCH_C_SRC		= $(wildcard $(ARCH_DIR)/kernel/*.c)
ARCH_C_OBJ		= $(patsubst $(ARCH_DIR)/kernel/%.c,$(OUTPUT_DIR)/$(ARCH_DIR)/kernel/%.o,$(ARCH_C_SRC))

ARCH_KERNEL_ASM_SRC = $(wildcard $(ARCH_DIR)/kernel/*.asm)
ARCH_KERNEL_ASM_OBJ = $(patsubst $(ARCH_DIR)/kernel/%.asm,$(OUTPUT_DIR)/$(ARCH_DIR)/kernel/%.o,$(ARCH_KERNEL_ASM_SRC))
ARCH_BOOT_ASM_SRC = $(wildcard $(ARCH_DIR)/boot/*.asm)
ARCH_BOOT_ASM_OBJ = $(patsubst $(ARCH_DIR)/boot/%.asm,$(OUTPUT_DIR)/$(ARCH_DIR)/boot/%.o,$(ARCH_BOOT_ASM_SRC))
ARCH_ASM_OBJ = $(ARCH_KERNEL_ASM_OBJ) $(ARCH_BOOT_ASM_OBJ)

ARCH_OBJ		= $(ARCH_C_OBJ) $(ARCH_ASM_OBJ)

TEST_SRC	= $(wildcard $(TEST_DIR)/*.c)
TEST_OBJ	= $(patsubst $(TEST_DIR)/%.c,$(OUTPUT_DIR)/$(TEST_DIR)/%.o,$(TEST_SRC))

CINC		:= -Iinclude/ -Iarch/$(ARCH)/include -I $(PLATFORM_DIR)/include -I.
CFLAGS		:= -O0 -Wall -fno-pie -ffreestanding -fno-stack-protector \
			   -fno-asynchronous-unwind-tables $(CINC) -mno-sse -mno-sse2 \
			   -mno-sse3 -mno-sse4

# Include the architecture-specific Makefile
include $(ARCH_DIR)/Makefile

# Include the platform-specific Makefile
include $(ARCH_DIR)/platforms/$(PLATFORM)/Makefile

# Build tools
CC			:= $(CC_TOOLCHAIN)gcc
LD			:= $(CC_TOOLCHAIN)ld
AS			:= $(CC_TOOLCHAIN)as
OBJCOPY		:= $(CC_TOOLCHAIN)objcopy


# --------------------------------------------------------------------------- #
# Operations																  #
# --------------------------------------------------------------------------- #

clean:
	rm -rf $(OUTPUT_DIR)
